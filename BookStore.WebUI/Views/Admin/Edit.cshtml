@model BookStore.Domain.Entities.Book

@{
    ViewBag.Title = "Edit";
}
<script src="~/Scripts/jquery-3.3.1.min.js"></script>
<h2>Edit</h2>
<style>
    .img-circle {
        border-radius: 50%;
        border: 10px;
        border-style: inset;
        width: 200px;
        height: 200px;
    }
</style>

@using (Html.BeginForm("edit", "admin", FormMethod.Post, new { enctype = "multipart/form-data" } ))
{
                @Html.AntiForgeryToken()

                <div class="form-horizontal col-lg-5">
        <h4>Book</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ISBN)

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Titel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Titel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Titel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Specialization, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Specialization, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Specialization, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImgagePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

               

               @*@Html.EditorFor(model => model.ImgagePath, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImgagePath, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
                <div class="form-horizontal col-lg-4">
                    <br /><br /><br /><br />
                    <img class="img-circle" id="img" src="../../Bookimages/@Model.ImgagePath     " alt="Alternate Text" />
                    <br /> <br />
                    <input type="file" name="ImgFile" id="ImgFile" style="width: 100%;" />
                </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>


    function readURL(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#img').attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }
    $("#ImgFile").change(function () {
        readURL(this);
    });

</script>